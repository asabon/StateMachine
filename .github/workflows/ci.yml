name: CI

on:
  push:
    branches: [ "main" ]
    paths-ignore: [ "badges" ]
  pull_request:
    branches: [ "main" ]

jobs:
  unittest:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install GoogleTest
        run: |
          sudo apt install libgtest-dev

      - name: Setup .NET Core # Required to execute ReportGenerator
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.x
          dotnet-quality: 'ga'

      - name: Build and Run-Test
        run: |
          mkdir -p build
          cd build
          cmake ..
          make
          ./statemachine-test

      - name: gcov
        run: |
          cd build/CMakeFiles/statemachine-test.dir/src
          gcov *.gcda

#      - run: ls build
#      - run: ls build/CMakeFiles
#      - run: ls build/CMakeFiles/statemachine-test.dir
#      - run: ls build/CMakeFiles/statemachine-test.dir/src
#      - run: ls build/CMakeFiles/statemachine-test.dir/test
    
      - name: ReportGenerator
        uses: danielpalme/ReportGenerator-GitHub-Action@5.2.0
        with:
          reports: build/CMakeFiles/statemachine-test.dir/src/*.gcov
          targetdir: CoverageReport
          reporttypes: Html;MarkdownSummaryGithub;Badges

      - name: Upload CoverageReport
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: ./CoverageReport

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: test-package
          path: build

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: CoverageReport/SummaryGithub.md

  badges:
    if: github.event_name == 'push'
    needs: unittest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Download coverage report
        uses: actions/download-artifact@v3
        with:
          name: coverage-report
          path: ./CoverageReport

      - name: Copy badge
        run: |
          mkdir -p badges
          cp CoverageReport/badge_linecoverage.svg badges/

      - name: Push to badges branch
        uses: s0/git-publish-subdir-action@master
        env:
          REPO: self
          BRANCH: badges
          FOLDER: badges
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
